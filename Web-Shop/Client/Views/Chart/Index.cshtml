@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using Common.Models
@model List<Chart>

<h1>Chart</h1>

<a href="@Url.Action("Index", "Article")">Articles</a>

<p>Address: @ViewBag.Chart.Address</p>
<p>Total Price: @Math.Round(ViewBag.Chart.TotalPrice)</p>

<p>Items: </p>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Amount</th>
            <th />
        </tr>
    </thead>
    <tbody>
        @if (((Chart)ViewBag.Chart).Items.Count != 0)
        {
            @foreach (var item in ((Chart)ViewBag.Chart).Items)
            {
                <tr>
                    <td>@item.ArticleId</td>
                    <td>@item.ArticleName</td>
                    <td>@item.ArticlePrice</td>
                    <td>
                        @using (Html.BeginForm("ModifyAmount", "Chart", FormMethod.Post))
                        {
                            <input type="hidden" name="articleId" value="@item.ArticleId" />
                            <input type="number" name="amount" min="1" value="@item.Amount" class="amount-input" onchange="this.form.submit()" />
                        }
                    </td>
                    <td>
                        @using (Html.BeginForm("DeleteArticle", "Chart", FormMethod.Post))
                        {
                            <input type="hidden" name="articleId" value="@item.ArticleId" />
                            <button type="submit">Remove from Chart</button>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">"There is no article"</td>
            </tr>
        }
    </tbody>
</table>

<div>
    <label for="paymentSelector">Select Payment Method:</label>
    @Html.DropDownList("paymentSelector", new SelectList(new[]
    {
        new SelectListItem { Text = "Pay with PayPal", Value = "paypal" },
        new SelectListItem { Text = "Pay with Checkout", Value = "checkout" }
    }, "Value", "Text", ViewBag.SelectedPayment), new { id = "paymentSelector" })
</div>


@if (ViewBag.SelectedPayment == "paypal")
{
    <div id="paypal-button-container"></div>
}
else
{
    @using (Html.BeginForm("Checkout", "Chart", FormMethod.Get))
    {
        <button type="submit">Checkout</button>
    }
}

<p>@ViewBag.Error</p>
<p>@ViewBag.ErrorView</p>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Address</th>
            <th>Total Price</th>
            <th>Items</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count != 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Address</td>
                    <td>@Math.Round(item.TotalPrice, 2)</td>
                    <td>
                        @foreach (var article in item.Items)
                        {
                            <p>Id: @article.ArticleId Name: @article.ArticleName Price: @article.ArticlePrice Amount: @article.Amount</p>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4">"There is no chart"</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        let paypal_buttons = paypal.Buttons({
            createOrder() {
                return fetch("@Url.Action("CreateOrder", "Chart")", {
                    method: "POST"
                })
                    .then((response) => response.json())
                    .then((order) => order.id);
            },

            onApprove(data) {
                return fetch("@Url.Action("CompleteOrder", "Chart")", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        orderID: data.orderID
                    })
                })
                    .then((response) => response.json())
                    .then((details) => {
                        if (details === 'success') {
                            window.location.href = '/Chart/Checkout';
                        }
                        else {

                        }
                    });
            },

            onError(err) {
            }
        });
        paypal_buttons.render('#paypal-button-container');

        $(function () {
            $('#paymentSelector').change(function () {
                var selectedPayment = $(this).val();
                window.location.href = '@Url.Action("Index", "Chart")' + '?payment=' + selectedPayment;
            });
        });
    </script>
}
